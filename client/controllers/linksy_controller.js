// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 
        'models/link_collection', 
        'views/linksy_view', 
        'views/login_view'], function(Chaplin, LinkCollection, LinksyView, LoginView) {
  'use strict';

  var LinksyController;
  return LinksyController = (function(_super) {

    __extends(LinksyController, _super);

    function LinksyController() {
      return LinksyController.__super__.constructor.apply(this, arguments);
    }

    LinksyController.prototype.title = 'links';

    LinksyController.prototype.historyURL = function(params) {
      return '';
    }; 

    LinksyController.prototype.login = function(params){
      console.log("controller.linsky.login");
      return this.view = new LoginView();

    };


    LinksyController.prototype.show = function(params) {
      console.log("controllers.linksycontroller.init");
      Chaplin.mediator.publish("FilterChange", "All");
      this.collection = new LinkCollection();
      var that = this;
      this.collection.fetch({success:function(){
            return that.view = new LinksyView({
                collection: that.collection
             });
        }, error:function(){
        
        }});
      return this;
    };
    
    LinksyController.prototype.showTag = function(params) {
      console.log("controllers.linksycontroller.showtag");  
      Chaplin.mediator.publish("FilterChange", params.tag);
      this.collection = new LinkCollection();
      var that = this;
      this.collection.fetch({data: {tag:params.tag},success:function(){
            return that.view = new LinksyView({
                collection: that.collection
             });
        }, error:function(){
        
        }});
      return this;
    };
    return LinksyController;

  })(Chaplin.Controller);
});
