// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 'models/base/model', 'models/base/collection', 'views/filter_view'], function(Chaplin,Model, Collection, FilterView) {
  'use strict';

  var FilterController;
  return FilterController = (function(_super) {

    __extends(FilterController, _super);

    function FilterController() {
      return FilterController.__super__.constructor.apply(this, arguments);
    }


    FilterController.prototype.initialize = function(params) {
    
      console.log("FilterController.init");  
      FilterController.__super__.initialize.apply(this, arguments);
      this.collection = new Collection([new Model({filter:"All"})]);
      var that = this;
      return this.view = new FilterView({
            collection: this.collection
         });
    };
    return FilterController;

  })(Chaplin.Controller);
});
