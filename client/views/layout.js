// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin'], function(Chaplin) {
  'use strict';

  var Layout;
  return Layout = (function(_super) {

    __extends(Layout, _super);

    function Layout() {
    
      return Layout.__super__.constructor.apply(this, arguments);
    }
    
    Layout.prototype.initialize = function(){
        Layout.__super__.initialize.apply(this, arguments);
        console.log("layout.initialize");
        
        Chaplin.mediator.subscribe("refreshAllViews", this.refreshAll, this);
    };
    
    Layout.prototype.refreshAll = function(){
        console.log("layout.refrfesh");
        console.log(this);
        
        if( this.tags != null && this.tags.view != null){
            this.tags.view.refresh();
        }
        app.dispatcher.currentController.view.refresh(); 
    };

    Layout.prototype.loginStatus = function(status){
        if(status){
            app.layout.form = new FormController();
            app.layout.tags = new TagController();
            app.layout.currentFilter = new FilterController();
        }else{  
            app.layout.form.dispose();
            app.layout.tags.dispose();
            
        }

    }


    return Layout;

  })(Chaplin.Layout);
});
