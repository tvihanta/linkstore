
define(['chaplin',
        'views/base/view',
        'lib/utils',
        'models/tag',
        'text!templates/tags.hbs'], function(Chaplin,View, utils, TagsModel, template) {
    'use strict';

    var TagView = View.extend({
        template: template,
        autoRender:false,
        className:"tags",
        initialize:function(options){
            TagView.__super__.initialize.apply(this, arguments);
            this.selectedItem = options.selectedItem;
            this.collection = new TagsModel();
            this.collection.bind("reset add change delete", this.render, this);
            this.collection.fetch()
        },
        removeLink : function(e){
            this.model.destroy({success:function(){
                console.log("succesful delete");
            }});
        },
        render:function () {
            TagView.__super__.render.apply(this, arguments);
        },
        attach:function () {
            TagView.__super__.attach.apply(this, arguments);
            this.$("."+this.selectedItem+"-item").addClass("active");
        },
        tagRemove : function(e){
            var elem = $(e.currentTarget);
            var id = elem.data("id");
            var modl = this.collection.get(id);
            var that = this;
            modl.destroy({success:function(){
                //that.refresh();
                Chaplin.mediator.publish("refreshAllViews");
            }});
            //this.collection.remove(modl);
        }
    });
    return TagView;
});

//// Generated by CoffeeScript 1.3.3
//var __hasProp = {}.hasOwnProperty,
//  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };
//
//define(['chaplin','views/base/view', 'text!templates/tags.hbs'], function(Chaplin,View, template) {
//  'use strict';
//
//  var TagView;
//  return TagView = (function(_super) {
//
//    __extends(TagView, _super);
//
//    function TagView() {
//      return TagView.__super__.constructor.apply(this, arguments);
//    }
//
//    TagView.prototype.template = template;
//    TagView.prototype.initialize = function(){
//        console.log("tagsview.initialize");
//        TagView.__super__.initialize.apply(this, arguments);
//        Chaplin.mediator.subscribe("refreshAll", function(){this.refresh();}, this);
//    };
//    TagView.prototype.afterRender = function(){
//        console.log("tagsview.afterRender");
//        TagView.__super__.afterRender.apply(this, arguments);
//        this.delegate("click", ".edit-tag", this.showEdit);
//        this.delegate("change", ".tag-input", this.tagChange);
//        this.delegate("click", ".tag-remove", this.tagRemove);
//    };
//   // template = null;
//    TagView.prototype.showEdit = function(e){
//        var elem = $(e.currentTarget).parent();
//        $(".tag-text", elem).toggle();
//        $(".tag-input-cont",elem).toggle();
//    };
//    TagView.prototype.tagChange = function(e){
//        var elem = $(e.currentTarget);
//        var id = elem.data("id");
//        var modl = this.collection.get(id);
//        modl.set('tag', elem.val());
//        modl.save(null, {success: function(){
//            console.log("tag save");
//            Chaplin.mediator.publish("refreshAllViews");
//        }});
//    };
//    TagView.prototype.tagRemove = function(e){
//        var elem = $(e.currentTarget);
//        var id = elem.data("id");
//        var modl = this.collection.get(id);
//       var that = this;
//        modl.destroy({success:function(){
//            console.log(that.collection);
//            //that.refresh();
//            Chaplin.mediator.publish("refreshAllViews");
//        }});
//        //this.collection.remove(modl);
//
//    };
//    TagView.prototype.className = 'tags';
//    TagView.prototype.container = '#tag-container';
//    TagView.prototype.autoRender = true;
//
//    return TagView;
//
//  })(View);
//});
