// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin',
        'views/base/view',
         'lib/utils',
         'models/login',
         'text!templates/login.hbs'], function(Chaplin,View, utils,LoginModel, template) {
  'use strict';

  var LinksView;
  return LinksView = (function(_super) {

    __extends(LinksView, _super);

    function LinksView() {
      return LinksView.__super__.constructor.apply(this, arguments);
    }

    LinksView.prototype.template = template;
    LinksView.prototype.initialize = function(){
    
    LinksView.__super__.initialize.apply(this, arguments);
        console.log("linksview.initialize");
    };
    
    LinksView.prototype.afterRender = function(){
        LinksView.__super__.afterRender.apply(this, arguments);
        this.delegate("click", "#login", this.doLogin);
        this.usernameInput= $('.username');
        this.passwordInput= $('.psw');
    };
   // template = null;
    LinksView.prototype.doLogin=function(e){

        var model = new LoginModel({
                                username:this.usernameInput.val(), 
                                psw:this.passwordInput.val()
                                });
        console.log(model)
        model.save({
            success: function(model, request){
                console.log(model);
                Chaplin.mediator.publish('loginStatus', true);
            },
            failure: function(req){
                Chaplin.mediator.publish('loginStatus', false);
            }

        });
    };
    LinksView.prototype.className = 'links';
    LinksView.prototype.container = '#links-container';
    LinksView.prototype.autoRender = true;
    return LinksView;

  })(View);
});
